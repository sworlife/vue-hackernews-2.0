'use strict';

const webpack = require('webpack');
const fs = require('fs');
const MFS = require('memory-fs');
const LRU = require('lru-cache');
const path = require('path');
const { createBundleRenderer } = require('vue-server-renderer');
const serverConfig = require('./build/webpack.server.config');


const webpackServer = {
  mfs: new MFS(),
  serverRenderer: null,
  createCompiler() {
    this.serverCompiler = webpack(serverConfig);
    this.serverCompiler.outputFileSystem = this.mfs;
  },
  readFile(fs, file) {
    try {
      return fs.readFileSync(path.join(serverConfig.output.path, file), 'utf-8');
    } catch (e) {
      console.error(e);
    }
  },
  resolve(file) {
    return path.resolve(__dirname, file);
  },
  createRenderer() {
    // read bundle generated by vue-ssr-webpack-pluginconst
    const templatePath = path.resolve(__dirname, './template/vue-template.html');
    const template = fs.readFileSync(templatePath, 'utf-8');
    const bundle = JSON.parse(this.readFile(this.mfs, 'vue-ssr-server-bundle.json'));
    this.serverRenderer = createBundleRenderer(bundle, {
      // for component caching
      cache: LRU({
        max: 1000,
        maxAge: 1000 * 60 * 15,
      }),
      // this is only needed when vue-server-renderer is npm-linked
      basedir: this.resolve('./dist'),
      // recommended for performance
      runInNewContext: false,
      template,
    });
  },
};


module.exports = webpackServer;
